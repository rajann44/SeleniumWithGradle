plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.testng', name: 'testng', version: '7.4.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.9.0'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.3'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
}

tasks.register("task1"){
    println("Hello")
}

test {

    //useDefaultListeners = true // Tells TestNG to execute its default reporting structure
    //includeGroups 'Regression' // We define the group name by using ‘includeGroups’ parameter.
    //excludeGroups 'Smoke' //Mention the group names to not include

    //suites 'src/test/testng.xml' //location of our suite.xml

    def runSuite = project.hasProperty("suite")

    useTestNG(){

        if (runSuite) {
            // If parameter was passed in, use it in the 'suites' command
            def suiteToRun = project.getProperty("suite")
            suites "src/test/"+suiteToRun
        } else {
            suites 'src/test/testng.xml'
        }

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // enable console logging of test results
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }

        // Fail the 'test' task on the first test failure
        failFast = true

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
        }

    }
}